// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyNews.Api.Data;

#nullable disable

namespace MyNews.Api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250921155957_StartIntegrationChatGpt")]
    partial class StartIntegrationChatGpt
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MyNews.Api.Models.NewsItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PublishedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Section")
                        .HasColumnType("int");

                    b.Property<int>("SourceId")
                        .HasColumnType("int");

                    b.Property<string>("Summary")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("SourceId");

                    b.HasIndex("Title", "SourceId")
                        .IsUnique();

                    b.ToTable("NewsItems", (string)null);
                });

            modelBuilder.Entity("MyNews.Api.Models.Source", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Section")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Sources", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Nova",
                            Section = 3,
                            Url = "https://nova.bg/"
                        },
                        new
                        {
                            Id = 2,
                            Name = "BTV",
                            Section = 3,
                            Url = "https://btvnovinite.bg/"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Dnevnik",
                            Section = 3,
                            Url = "https://www.dnevnik.bg/"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Offnews",
                            Section = 3,
                            Url = "https://offnews.bg/"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Sportal",
                            Section = 5,
                            Url = "https://www.sportal.bg/"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Gong",
                            Section = 5,
                            Url = "https://gong.bg/"
                        },
                        new
                        {
                            Id = 7,
                            Name = "24Chasa",
                            Section = 3,
                            Url = "https://www.24chasa.bg/"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Dir.bg",
                            Section = 3,
                            Url = "https://www.dir.bg/"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Investor",
                            Section = 4,
                            Url = "https://www.investor.bg/"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Vesti.bg",
                            Section = 3,
                            Url = "https://www.vesti.bg/"
                        });
                });

            modelBuilder.Entity("MyNews.Api.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordResetToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("PasswordResetTokenExpires")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("MyNews.Api.Models.UserNewsRead", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<Guid>("NewsItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ReadAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<Guid>("UserId1")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("NewsItemId");

                    b.HasIndex("UserId1");

                    b.ToTable("UserNewsReads");
                });

            modelBuilder.Entity("MyNews.Api.Models.NewsItem", b =>
                {
                    b.HasOne("MyNews.Api.Models.Source", "Source")
                        .WithMany("NewsItems")
                        .HasForeignKey("SourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Source");
                });

            modelBuilder.Entity("MyNews.Api.Models.UserNewsRead", b =>
                {
                    b.HasOne("MyNews.Api.Models.NewsItem", "NewsItem")
                        .WithMany()
                        .HasForeignKey("NewsItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyNews.Api.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NewsItem");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MyNews.Api.Models.Source", b =>
                {
                    b.Navigation("NewsItems");
                });
#pragma warning restore 612, 618
        }
    }
}
